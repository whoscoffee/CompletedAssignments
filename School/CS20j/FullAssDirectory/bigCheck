#!/usr/bin/perl
# bigCheck
# Steve J Hodges, sthodges@cabrillo.edu
# Cabrillo College
# play 72x2 games of 3d Tic Tac Toe
# to verify correct winner
# DISCLAIMER: NOT TO BE USED AS AN EXAMPLE PROGRAM


#for($i=0; $i<64; $i++){
#    print( calculateCoordinates($i) );
#    print("\n");
#}


my $allTests = <<END_TESTS;
0 1 2 3
4 5 6 7
8 9 10 11
12 13 14 15
16 17 18 19
20 21 22 23
24 25 26 27
28 29 30 31
32 33 34 35
36 37 38 39
40 41 42 43
44 45 46 47
48 49 50 51
52 53 54 55
56 57 58 59
60 61 62 63
0 4 8 12
1 5 9 13
2 6 10 14
3 7 11 15
16 20 24 28
17 21 25 29
18 22 26 30
19 23 27 31
32 36 40 44
33 37 41 45
34 38 42 46
35 39 43 47
48 52 56 60
49 53 57 61
50 54 58 62
51 55 59 63
0 5 10 15
16 21 26 31
32 37 42 47
48 53 58 63
3 6 9 12
19 22 25 28
35 38 41 44
51 54 57 60
0 16 32 48
1 17 33 49
2 18 34 50
3 19 35 51
4 20 36 52
5 21 37 53
6 22 38 54
7 23 39 55
8 24 40 56
9 25 41 57
10 26 42 58
11 27 43 59
12 28 44 60
13 29 45 61
14 30 46 62
15 31 47 63
0 17 34 51
4 21 38 55
8 25 42 59
12 29 46 63
3 18 33 48
7 22 37 52
11 26 41 56
15 30 45 60
0 20 40 60
1 21 41 61
2 22 42 62
3 23 43 63
12 24 36 48
13 25 37 49
14 26 38 50
15 27 39 51
0 21 42 63
15 26 37 48
3 22 41 60
12 25 38 51
END_TESTS

my $correctRuns1 = 0;
my $correctRuns2 = 0;
my $runs = 0;
my $complete = 0;
my @combos = split(/\n/, $allTests);
my $add;

# test all 76 wins
for($i = 0; $i < 76; $i++){
    system("rm -rf .moves");
    @wins = split(/ /, $combos[$i]);
    open(my $fh, '>', ".moves") or die "Could not create file .moves $!";
    for($j = 0; $j < 4; $j++){
	# print ( $wins[$j] ); print  "\n";
	# print calculateCoordinates( $wins[$j] ); print  "\n";
	# print ( randomNotInList(@wins) ); print "\n";
	# print calculateCoordinates( randomNotInList(@wins) ); print "\n";
	print $fh calculateCoordinates( $wins[$j] ); print $fh "\n";
	$ add = randomNotInList(@wins); push @wins, $add;
	print $fh calculateCoordinates( $add ); print $fh "\n";
    }
    close $fh;
    system("java TicTacToe < .moves > .result");
    my $result = `tail -1 .result`;
    chomp($result);
    # print("*$result*\n");
    if( $result == "1"){
	$correctRuns1++;
    }
    print "."; $runs++;
    if ($runs%16 == 0){
	$complete+=10;
	print "[$complete%]\n"; }
    system("rm -rf .moves");
    @wins = split(/ /, $combos[$i]);
    open(my $fh, '>', ".moves") or die "Could not create file .moves $!";
    for($j = 0; $j < 4; $j++){
	$ add = randomNotInList(@wins); push @wins, $add;
	print $fh calculateCoordinates( $add ); print $fh "\n";
	print $fh calculateCoordinates( $wins[$j] ); print $fh "\n";
    }
    close $fh;
    system("java TicTacToe < .moves > .result");
    my $result = `tail -1 .result`;
    chomp($result);
    if( $result == "2"){
	$correctRuns2++;
    }
    print "."; $runs++;
    if ($runs%16 == 0){ 
	$complete+=10;
	print "[$complete%]\n"; }
}
print "\n";
if ($correctRuns1 == 76){
    print "PASSED ALL $correctRuns1 of 76 games with player 1 winner.\n";
} else {
    print "WARNING: passed $correctRuns1 of 76 games with player 1 winner.\n";
}
if ($correctRuns2 == 76){
    print "PASSED ALL $correctRuns2 of 76 games with player 2 winner.\n";
} else {
    print "WARNING: passed $correctRuns2 of 76 games with player 2 winner.\n";
}


# -----------------------------------------------------------



sub randomNotInList{
    my $random = int(rand(64));
    # print "rNIL: @_    ";
    while($random == $_[0] || $random == $_[1] || $random == $_[2] || $random == $_[3] ||
	  $random == $_[4] || $random == $_[5] || $random == $_[6] ){
	$random = int(rand(64));
    }
    # print "$random \n";
    return $random;
}

sub calculateCoordinates{
    use integer;
    my $square = shift @_;
    if ($square < 0 || $square > 63){ return "-1 -1 -1";}
    my $value = "" . $square/16 . " " . $square%16/4 . " " .$square%4;
    return $value;
}


